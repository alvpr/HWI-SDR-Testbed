/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(constellation_joint_decoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7b1a5e527860a98b5c5a5d371341d025)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <demonstrator/constellation_joint_decoder.h>
// pydoc.h is automatically generated in the build directory
#include <constellation_joint_decoder_pydoc.h>

void bind_constellation_joint_decoder(py::module& m)
{

    using constellation_joint_decoder    = ::gr::demonstrator::constellation_joint_decoder;


    py::class_<constellation_joint_decoder, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<constellation_joint_decoder>>(m, "constellation_joint_decoder", D(constellation_joint_decoder))

        .def(py::init(&constellation_joint_decoder::make),
           py::arg("constj"),
           py::arg("const1"),
           py::arg("const2"),
           py::arg("n_user"),
           D(constellation_joint_decoder,make)
        )
        



        ;




}








